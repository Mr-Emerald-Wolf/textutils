{"version":3,"sources":["components /Navbar.js","components /TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","class","role","onClick","changeTheme","textTheme","TextForm","useState","text","setText","words","split","length","all_char","minutes","heading","rows","onChange","event","target","value","newtext","toUpperCase","button","toLowerCase","readOnly","defaultProps","App","theme","setTheme","setTextTheme","document","body","style","backgroundColor","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9993eea1.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n//import { Link } from 'react-router-dom';\n\n\nexport default function Navbar(props) {\n    return (\n\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\n            <div className=\"container\">\n                <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n                        <li className=\"nav-item\">\n                            <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\n                        </li>\n                       \n                        \n                        <li className=\"nav-item\">\n                            <a className=\"nav-link disabled\" href=\"/\">Created on October 2021</a>\n                        </li>\n\n                    </ul>\n                    <div class=\"form-check form-switch m-1\">\n                        <input className=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" onClick={props.changeTheme} />\n                        <label className={`form-check-label text-${props.textTheme} htmlFor=\"flexSwitchCheckDefault`}>Dark Mode</label>\n                    </div>\n                </div>\n            </div>\n        </nav>\n\n    )\n}\nNavbar.propTypes = { title: PropTypes.string.isRequired, } //Proptypes help debug errors involving wrong type of object sent\n//It will show error if for example an integer is sent in title\nNavbar.defaultProps = {\n    title: 'Send Title Here',\n};","import React, { useState } from 'react'\n\nexport default function TextForm(props) {\n    const handleUp = () => {\n        //console.log(\"Uppercase was clicked: \"+ text);\n        let newtext = text.toUpperCase();\n        setText(newtext);\n    }\n    const handleLow = () => {\n        let newtext = text.toLowerCase();\n        setText(newtext);\n    }\n    const handleChange = (event) => {\n        //console.log(\"Changing text\");\n        setText(event.target.value)\n    }\n    const handleClear = () => {\n        let newtext = \"\";\n        setText(newtext);\n    }\n    const [text, setText] = useState(\"Formatted text\"); //Hooks like use State are used to update page in real time without reload\n    //To use hook: Make new array -> const [ variableTobeUpdated , FunctionUsedToUpdateVariable ] = useState(\"Default Value of Variable\");\n    let words = text.split(\" \").length;\n    let all_char = text.length;\n    let minutes = words * 0.008\n    return (\n        <div className=\"container\">\n            <div className={`container m-3 text-${props.textTheme}`}>\n                <div className=\"mb-3\">\n                    <h1>{props.heading}</h1>\n                    \n                    <textarea className=\"form-control\" id=\"mybox\" rows=\"5\" onChange={handleChange}></textarea>\n                </div>\n\n\n\n                <button className={`btn btn-${props.textTheme} m-1`} onClick={handleUp}>{props.button}</button>\n                <button className={`btn btn-${props.textTheme} m-1`} onClick={handleLow}>Convert to Lowercase</button>\n                <button className={`btn btn-${props.textTheme} m-1`} onClick={handleClear}>Clear Text</button>\n\n\n                <div className=\"mb-3 p-1\">\n                    <h1>Edited text here:</h1>\n                    <textarea className=\"form-control\" rows=\"5\" value={text} readOnly></textarea>\n                </div>\n\n            </div>\n            <div className={`container-fluid m-3 text-${props.textTheme}`}>\n                <h1>Your text summary</h1>\n                <p>Words: {words} Characters: {all_char} Minutes Read:{minutes}</p>\n            </div>\n        </div>\n    )\n}\n","import './App.css';\nimport Navbar from './components /Navbar';\nimport TextForm from './components /TextForm';\n//import About from './components /About';\n//import { Routes, Route } from \"react-router-dom\";\n\n\nimport React, { useState } from 'react'\n\nfunction App() {\n  const [theme, setTheme] = useState('light')\n  const [textTheme, setTextTheme] = useState('dark')\n\n\n  const changeTheme = () => {\n    if (theme === 'light') {\n      setTheme('dark');\n      setTextTheme('light');\n      document.body.style.backgroundColor = \"black\";\n    }\n    if (theme === 'dark') {\n      setTheme('light');\n      setTextTheme('dark');\n      document.body.style.backgroundColor = \"white\";\n\n    }\n\n  }\n  return (\n    <>\n      <Navbar title=\"TextUtils\" mode={theme} textTheme={textTheme} changeTheme={changeTheme} />\n      {/* <Routes>\n        <Route exact path=\"/\" element={<TextForm heading=\"Enter the text to analyze\" mode={theme} textTheme={textTheme} button=\"Convert to Uppercase\" />} />\n        <Route exact path=\"about\" element={<About mode={theme} textTheme={textTheme} />} />\n      </Routes> */}\n      <TextForm heading=\"Enter the text to analyze\" mode={theme} textTheme={textTheme} button=\"Convert to Uppercase\" />\n\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n//import { BrowserRouter } from \"react-router-dom\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}